#!/bin/bash

set -euo pipefail
set -x

readonly ROOT="$(git rev-parse --show-toplevel)"
readonly CMD_DIR="${ROOT}/cmd/protoc-gen-elm"

# Make sure the current commit is tagged, using the following command:
# git tag -a v0.0.2 -m 'release'

# Remove the leading "v" from the tag, if necessary.
readonly NEW_VERSION=$(git tag --contains | tr -d v)

# Exit if a tag does not exist for the current commit.
if [[ -z $NEW_VERSION ]]; then
  echo "Missing required version tag."
  exit 1
fi

"${ROOT}/scripts/compile_test_plugin"

readonly FOUND_VERSION="$("${ROOT}/elm-test-project/elm-protobuf-test" --version | cut -d' ' -f2)"
if [[ "${FOUND_VERSION}" != "${NEW_VERSION}" ]]; then
  echo "Versions do not match.  Be sure to update the version defined in main.go"
  exit 1
fi

function build() {
    OS="${1}"
    ARCH="${2}"
    OUT="elm-protobuf-${NEW_VERSION}-${OS}-${ARCH}"

    GOOS="${OS}" GOARCH="${ARCH}" GO111MODULE=on go build -o "${ROOT}/protoc-gen-elm/bin/${OUT}" "${CMD_DIR}"
}

# Disable cgo in order to ensure static binaries.
export CGO_ENABLED=0

# List of all supported GO platforms from `go tool dist list`
build aix ppc64
# build android 386
# build android amd64
# build android arm
build android arm64
# build darwin amd64
build darwin arm64
build dragonfly amd64
build freebsd 386
build freebsd amd64
build freebsd arm
build freebsd arm64
build illumos amd64
# build ios amd64
# build ios arm64
build js wasm
build linux 386
build linux amd64
build linux arm
build linux arm64
build linux mips
build linux mips64
build linux mips64le
build linux mipsle
build linux ppc64
build linux ppc64le
build linux riscv64
build linux s390x
build netbsd 386
build netbsd amd64
build netbsd arm
build netbsd arm64
build openbsd 386
build openbsd amd64
build openbsd arm
build openbsd arm64
build openbsd mips64
build plan9 386
build plan9 amd64
build plan9 arm
build solaris amd64
build windows 386
build windows amd64
build windows arm

find "${ROOT}/protoc-gen-elm//bin" -maxdepth 1 -mindepth 1 ! -name '*.tar.gz' -exec tar -zcvf {}.tar.gz {}  \;
